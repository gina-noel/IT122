<html lang="en">
<head>
    <title>React IT 122 Yoga Demo</title>
    <link rel="stylesheet" href="css/styles.css">
    <link rel="shortcut icon" href="#">

    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>

<div id="root" class="container"></div>
<script type="text/babel">

    const poses = <%- poses %>;

    const Poses = (props) => {
        const listItems = props.data.map((item) =>
            <li key={item._id} id={item._id} onClick={props.clickHandler}>
                {item.name}
            </li>);
        return <ul>{listItems}</ul>
    }

    const ItemDetail = (props) => {
        return (
            <div>
                <hr />
                <h3>Pose Details:</h3>
                <form>
                    Name:  <input type="text" name="name" value={props.item.name || ""} onChange={props.handleChange} /><br/><br/>
                    Benefit: <input type="text" name="benefit" value={props.item.benefit || ""} onChange={props.handleChange} /><br/><br/>
                    Ability: <input type="text" name="ability" value={props.item.ability || ""} onChange={props.handleChange} /><br/><br/>
                    Symbol: <input type="text" name="symbol" value={props.item.symbol || ""} onChange={props.handleChange} /><br/><br/>
                </form>
                <button name="save" onClick={props.onSave}>Save</button>&nbsp;
                <button name="clear" onClick={props.clearForm}>Clear</button>&nbsp;
                <button name="delete" onClick={props.deleteItem}>Delete</button>&nbsp;
            </div>
        )
    }

        class App extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                items: poses,
                currentItem: {}

            };
            this.selectItem = this.selectItem.bind(this);
            this.handleChange = this.handleChange.bind(this);
            this.clearForm = this.clearForm.bind(this);
            this.onSave = this.onSave.bind(this);
            this.deleteItem = this.deleteItem.bind(this);
        }

        // select or click the event handler
        selectItem = (event) => {
            const poseFound = this.state.items.find((pose) => {
                return pose._id === event.target.id;
        });
            this.setState({"currentItem": poseFound})
        }

        handleChange = (event) => {
            let newItem = this.state.currentItem;
            newItem[event.target.name] = event.target.value;
            this.setState({currentItem: newItem})
        }

        clearForm = () => {
            this.setState({currentItem: {}})
        }

        onSave = () => {
            if (this.state.currentItem === {})
                return
            let newPose = this.state.currentItem;
            // console.log("onsave: " + newPose);
            fetch('/api/pose/add/', {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(newPose)
            })
                .then(res => res.json())

                .then((json) => {
                    console.log(json)

                    if (json.updated === 0) {
                        newPose._id = json._id
                        let newlist = this.state.items;
                        newlist.push(newPose);
                        this.setState({items: newlist});
                    }
                });
        }
        deleteItem = () => {
            console.log(this.state.currentItem)
            if (this.state.currentItem === {}) return
            let deleteId = this.state.currentItem._id
            let url = "/api/pose/delete/"+deleteId;
            fetch(url)
                .then(res => res.json())
                .then((json) => {
                    // if delete succeeded, update master list
                    if (json.deleted.deletedCount > 0) {
                        let newList = this.state.items.filter(item => {
                            return item._id !== deleteId;
                        })
                        this.setState({items: newList, currentItem: {}})
                    }
                })
        }
            // onDelete = () => {
            //     console.log(this.state.currentItem)
            //     if (this.state.currentItem === {}) return
            //     let deleteName = this.state.currentItem.name
            //     let url = "/api/delete/" + deleteName;
            //     console.log(url);
            //     fetch(url)
            //         .then(res => res.json())
            //         .then((items) => {
            //             if (items.deleted.deletedCount > 0) {
            //                 let newlist = this.state.items.filter(items => {
            //                     return items.name !== deleteName;
            //                 })
            //                 this.setState({items: newlist, currentItem: {}})
            //             }
            //         })
            // }


            // render the items
        render() {
            return (
                <div>
                    <h1>Poses</h1>
                    <Poses data={this.state.items} clickHandler={this.selectItem}/>
                    <hr/>
                    <ItemDetail item={this.state.currentItem} handleChange={this.handleChange}
                                clearForm={this.clearForm} onSave={this.onSave} deleteItem={this.deleteItem}/>
                </div>);
        }
    }

    // not sure why this says it's missing import...
    ReactDOM.render(  <App />,  document.getElementById('root') );

</script>
</body>
</html>